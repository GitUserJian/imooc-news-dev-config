############################################################
#
# 网关zuul
# web访问端口号  约定：7070
#
############################################################
server:
  port: ${port:7070}
  tomcat:
    uri-encoding: UTF-8

############################################################
#
# 配置项目信息
#
############################################################
spring:
  application:
    name: springcloud-zuul-server
  redis:
    database: 0
    host: 192.168.1.10
    port: 6379
    password: root
############################################################
#
# eureka 配置消息
#
eureka:
  instance:
    hostname: eureka
    port: 7000
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      # 集群中的每个eureka单实例，都需要相互注册到其他的节点，在此填入集群中其他eureka的地址进行相互注册
      defaultZone: http://eureka-cluster-7001:7001/eureka/,http://eureka-cluster-7002:7002/eureka/,http://eureka-cluster-7003:7003/eureka/

# 路由规则: http://[网关地址]:[端口号]/[prefix]/[微服务实例id]/[请求地址路径]
zuul:
  routes:
    # 由于路由id和微服务实例id相同，我们可以简化转发的配置
    service-article: /service-article/**       # 请求路径(前缀)
#      service-id: service-article     # 请求转发的微服务实例id
#          url: http://192.168.1.2:8001    # 请求转发到指定的微服务所在的ip地址
  prefix: /api                          # 网关的前缀

blackIP:
  continueCounts: ${counts:10}  # ip连续请求的次数
  timeInterval: ${interval:10}  # ip判断的时间间隔，单位：秒
  limitTimes: ${times:15}       # 限制的时间，单位：秒